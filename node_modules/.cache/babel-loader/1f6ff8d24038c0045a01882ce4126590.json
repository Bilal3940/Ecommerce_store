{"ast":null,"code":"var _s = $RefreshSig$();\nimport { ControlCameraOutlined } from '@material-ui/icons';\nimport { createRoot } from \"react-dom/client\";\nimport { createBrowserRouter, RouterProvider, Route, Link } from \"react-router-dom\";\nimport React, { useState, useEffect } from 'react';\nimport Cart from './components/cart/Cart';\nimport Navbar from './components/Nabar/Navbar';\nimport Products from './components/Products/Products';\nimport { commerce } from './lib/commerce';\nimport Mensproducts from './components/Mens/Mensproducts';\nimport Checkout from './components/Checkout/Checkout';\nconst App = () => {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [cart, setCart] = useState({});\n  const [del, setDel] = useState([]);\n  const [delitem, setDelitem] = useState([]);\n  const fetchproducts = async () => {\n    const {\n      data\n    } = await commerce.products.list();\n    setProducts(data);\n  };\n  const fetchcart = async () => {\n    setCart(await commerce.cart.retrieve());\n  };\n  // console.log(products);\n  // const fetchmanproducts = async ()=>{\n  //   setProducts()\n\n  // })\n  const handleAddToCart = async (productId, quantity) => {\n    setCart(await commerce.cart.add(productId, quantity));\n  };\n  // console.log(cart);\n  const handleUpdateCartQnt = async (productId, quantity) => {\n    setCart(await commerce.cart.update(productId, {\n      quantity\n    }));\n  };\n  const Emptycart = async () => {\n    setCart(await commerce.cart.empty());\n    // window.location.reload(); //It can also be used instead of fetchcart function\n    fetchcart(); //another method\n  };\n\n  const removeitem = async id => {\n    setCart(await commerce.cart.remove(id));\n    fetchcart();\n  };\n  useEffect(() => {\n    fetchproducts();\n    fetchcart();\n  }, []);\n  // commerce.cart.empty();\n};\n_s(App, \"fJbj9TME1m2pULasjtTu8aCR+p4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ControlCameraOutlined","createRoot","createBrowserRouter","RouterProvider","Route","Link","React","useState","useEffect","Cart","Navbar","Products","commerce","Mensproducts","Checkout","App","products","setProducts","cart","setCart","del","setDel","delitem","setDelitem","fetchproducts","data","list","fetchcart","retrieve","handleAddToCart","productId","quantity","add","handleUpdateCartQnt","update","Emptycart","empty","removeitem","id","remove"],"sources":["E:/Web Data/E-commerace/ak-store/src/App.js"],"sourcesContent":["\r\nimport { ControlCameraOutlined } from '@material-ui/icons'\r\nimport { createRoot } from \"react-dom/client\";\r\nimport {\r\n  createBrowserRouter,\r\n  RouterProvider,\r\n  Route,\r\n  Link,\r\n} from \"react-router-dom\";\r\nimport React,{useState, useEffect} from 'react'\r\nimport Cart from './components/cart/Cart'\r\nimport Navbar from './components/Nabar/Navbar'\r\nimport Products from './components/Products/Products'\r\nimport { commerce } from './lib/commerce'\r\nimport Mensproducts from './components/Mens/Mensproducts';\r\nimport Checkout from './components/Checkout/Checkout';\r\n\r\n\r\nconst App = () => {\r\nconst [products, setProducts ] = useState([]);\r\nconst [cart, setCart] = useState({});\r\nconst [del, setDel] = useState([]);\r\nconst [delitem, setDelitem] = useState([]);\r\nconst fetchproducts = async ()=>{\r\n  const {data} = await commerce.products.list();\r\n  setProducts(data);\r\n}\r\n\r\n\r\n\r\nconst fetchcart = async ()=>{\r\n  setCart( await commerce.cart.retrieve());\r\n}\r\n// console.log(products);\r\n// const fetchmanproducts = async ()=>{\r\n//   setProducts()\r\n\r\n  // })\r\nconst handleAddToCart = async(productId,quantity)=>{\r\n  setCart(await commerce.cart.add(productId, quantity));\r\n    \r\n}\r\n// console.log(cart);\r\nconst handleUpdateCartQnt = async(productId,quantity)=>{\r\n  setCart(await commerce.cart.update(productId, {quantity}));\r\n}\r\nconst Emptycart = async ()=>{\r\n  setCart(await commerce.cart.empty());\r\n  // window.location.reload(); //It can also be used instead of fetchcart function\r\n  fetchcart(); //another method\r\n}\r\nconst removeitem = async (id) => {\r\n  setCart(await commerce.cart.remove(id));\r\n  fetchcart();\r\n}\r\n  useEffect(()=>{\r\n    fetchproducts();\r\n    fetchcart();\r\n  },[]);  \r\n  // commerce.cart.empty();\r\n  \r\n}\r\nexport default App;"],"mappings":";AACA,SAASA,qBAAqB,QAAQ,oBAAoB;AAC1D,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SACEC,mBAAmB,EACnBC,cAAc,EACdC,KAAK,EACLC,IAAI,QACC,kBAAkB;AACzB,OAAOC,KAAK,IAAEC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAC/C,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,MAAM,MAAM,2BAA2B;AAC9C,OAAOC,QAAQ,MAAM,gCAAgC;AACrD,SAASC,QAAQ,QAAQ,gBAAgB;AACzC,OAAOC,YAAY,MAAM,gCAAgC;AACzD,OAAOC,QAAQ,MAAM,gCAAgC;AAGrD,MAAMC,GAAG,GAAG,MAAM;EAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAE,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC7C,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpC,MAAM,CAACa,GAAG,EAAEC,MAAM,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMiB,aAAa,GAAG,YAAU;IAC9B,MAAM;MAACC;IAAI,CAAC,GAAG,MAAMb,QAAQ,CAACI,QAAQ,CAACU,IAAI,EAAE;IAC7CT,WAAW,CAACQ,IAAI,CAAC;EACnB,CAAC;EAID,MAAME,SAAS,GAAG,YAAU;IAC1BR,OAAO,CAAE,MAAMP,QAAQ,CAACM,IAAI,CAACU,QAAQ,EAAE,CAAC;EAC1C,CAAC;EACD;EACA;EACA;;EAEE;EACF,MAAMC,eAAe,GAAG,OAAMC,SAAS,EAACC,QAAQ,KAAG;IACjDZ,OAAO,CAAC,MAAMP,QAAQ,CAACM,IAAI,CAACc,GAAG,CAACF,SAAS,EAAEC,QAAQ,CAAC,CAAC;EAEvD,CAAC;EACD;EACA,MAAME,mBAAmB,GAAG,OAAMH,SAAS,EAACC,QAAQ,KAAG;IACrDZ,OAAO,CAAC,MAAMP,QAAQ,CAACM,IAAI,CAACgB,MAAM,CAACJ,SAAS,EAAE;MAACC;IAAQ,CAAC,CAAC,CAAC;EAC5D,CAAC;EACD,MAAMI,SAAS,GAAG,YAAU;IAC1BhB,OAAO,CAAC,MAAMP,QAAQ,CAACM,IAAI,CAACkB,KAAK,EAAE,CAAC;IACpC;IACAT,SAAS,EAAE,CAAC,CAAC;EACf,CAAC;;EACD,MAAMU,UAAU,GAAG,MAAOC,EAAE,IAAK;IAC/BnB,OAAO,CAAC,MAAMP,QAAQ,CAACM,IAAI,CAACqB,MAAM,CAACD,EAAE,CAAC,CAAC;IACvCX,SAAS,EAAE;EACb,CAAC;EACCnB,SAAS,CAAC,MAAI;IACZgB,aAAa,EAAE;IACfG,SAAS,EAAE;EACb,CAAC,EAAC,EAAE,CAAC;EACL;AAEF,CAAC;AAAA,GA3CKZ,GAAG;AAAA,KAAHA,GAAG;AA4CT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module"}