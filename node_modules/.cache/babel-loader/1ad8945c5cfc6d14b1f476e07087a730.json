{"ast":null,"code":"var _jsxFileName = \"E:\\\\Web Data\\\\E-commerace\\\\ak-store\\\\src\\\\components\\\\Checkout\\\\AddressForm.jsx\",\n  _s = $RefreshSig$();\nimport PaymentForm from './PaymentForm';\nimport { useState, useEffect } from 'react';\nimport { InputLabel, Select, MenuItem, Buttons, Grid, Typography } from '@material-ui/core';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport FieldInputs from './FieldInputs';\nimport { commerce } from '../../lib/commerce';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AddressFrom = _ref => {\n  _s();\n  let {\n    CheckoutToken\n  } = _ref;\n  const [Shippingcountries, setShippingcountries] = useState([]);\n  const [Shippingcountry, setShippingcountry] = useState('');\n  const [Shippingcities, setShippingcities] = useState([]);\n  const [Shippingcity, setShippingcity] = useState('');\n  const [Shippingoptions, setShippingoptions] = useState([]);\n  const [Shippingoption, setShippingoption] = useState('');\n  const methods = useForm();\n  const countries = Object.entries(Shippingcountries).map(_ref2 => {\n    let [code, name] = _ref2;\n    return {\n      id: code,\n      label: name\n    };\n  });\n  console.log(countries);\n  const fetchcountries = async CheckoutTokenId => {\n    const {\n      countries\n    } = await commerce.services.localeListCountries(CheckoutTokenId);\n    setShippingcountries(countries);\n    setShippingcountry(Object.keys(countries)[0]);\n    console.log(countries);\n  };\n  useEffect(() => {\n    ;\n    fetchcountries(CheckoutToken.id);\n  }, []);\n  const fetchDivisons = async CountryCode => {\n    const {\n      Divisions\n    } = await commerce.services.localeListShippingSubdivisions(CountryCode);\n    console.log(Divisions);\n    setShippingcities(Divisions);\n    // setShippingcity(Object.keys(Divisions)[0]);\n  };\n\n  useEffect(() => {\n    ;\n    fetchDivisons(Shippingcountry);\n  }, [Shippingcountry]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterbottom: true,\n      children: \"Shipping Address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(FormProvider, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(FieldInputs, {\n            required: true,\n            name: \"firstname\",\n            label: \"First name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FieldInputs, {\n            required: true,\n            name: \"lastname\",\n            label: \"Last name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FieldInputs, {\n            required: true,\n            name: \"address\",\n            label: \"Addess\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FieldInputs, {\n            required: true,\n            name: \"email\",\n            label: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FieldInputs, {\n            required: true,\n            name: \"city\",\n            label: \"City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FieldInputs, {\n            required: true,\n            name: \"zip\",\n            label: \"Zip / Postal Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            xs: 12,\n            sm: 6,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Shipping Country\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: Shippingcountry,\n              fullWidth: true,\n              onChange: e => {\n                setShippingcountry(e.target.value);\n              },\n              children: countries.map(country => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: country.id,\n                children: country.label\n              }, country.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            xs: 12,\n            sm: 6,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Shipping City\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: \"\",\n              fullWidth: true,\n              onChange: \"\",\n              children: /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"\",\n                children: \"Select me\"\n              }, \"\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            xs: 12,\n            sm: 6,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Shipping Options\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: \"\",\n              fullWidth: true,\n              onChange: \"\",\n              children: /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"\",\n                children: \"Select me\"\n              }, \"\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(AddressFrom, \"Dgg0WilqpVmt6H4OWskaopkkbwk=\", false, function () {\n  return [useForm];\n});\n_c = AddressFrom;\nexport default AddressFrom;\nvar _c;\n$RefreshReg$(_c, \"AddressFrom\");","map":{"version":3,"names":["PaymentForm","useState","useEffect","InputLabel","Select","MenuItem","Buttons","Grid","Typography","useForm","FormProvider","FieldInputs","commerce","AddressFrom","CheckoutToken","Shippingcountries","setShippingcountries","Shippingcountry","setShippingcountry","Shippingcities","setShippingcities","Shippingcity","setShippingcity","Shippingoptions","setShippingoptions","Shippingoption","setShippingoption","methods","countries","Object","entries","map","code","name","id","label","console","log","fetchcountries","CheckoutTokenId","services","localeListCountries","keys","fetchDivisons","CountryCode","Divisions","localeListShippingSubdivisions","e","target","value","country"],"sources":["E:/Web Data/E-commerace/ak-store/src/components/Checkout/AddressForm.jsx"],"sourcesContent":["import PaymentForm from './PaymentForm';\r\nimport { useState, useEffect } from 'react';\r\nimport {InputLabel, Select, MenuItem, Buttons, Grid, Typography} from '@material-ui/core'\r\nimport {useForm, FormProvider } from 'react-hook-form';\r\nimport FieldInputs from './FieldInputs';\r\nimport { commerce } from '../../lib/commerce';\r\nconst AddressFrom = ({CheckoutToken}) => {\r\n  const [Shippingcountries, setShippingcountries] = useState([])\r\n  const [Shippingcountry, setShippingcountry] = useState('')\r\n  const [Shippingcities, setShippingcities] = useState([])\r\n  const [Shippingcity, setShippingcity] = useState('')\r\n  const [Shippingoptions, setShippingoptions] = useState([])\r\n  const [Shippingoption, setShippingoption] = useState('')\r\n  \r\n  const methods = useForm();\r\n  const countries = Object.entries(Shippingcountries).map(([code, name])=>({id:code, label:name}))\r\n  console.log(countries);\r\n\r\n  const fetchcountries = async(CheckoutTokenId)=>{\r\n      const { countries } = await commerce.services.localeListCountries(CheckoutTokenId);\r\n      setShippingcountries(countries);\r\n      setShippingcountry(Object.keys(countries)[0]);\r\n      console.log(countries);\r\n    }\r\n    useEffect(() => {;  \r\n    fetchcountries(CheckoutToken.id);\r\n    }, [])\r\n    const fetchDivisons = async(CountryCode)=>{\r\n      const { Divisions } = await commerce.services.localeListShippingSubdivisions(CountryCode);\r\n      console.log(Divisions);\r\n      setShippingcities(Divisions);\r\n      // setShippingcity(Object.keys(Divisions)[0]);\r\n      \r\n    }\r\n    useEffect(() => {;  \r\n    fetchDivisons(Shippingcountry);\r\n    }, [Shippingcountry])\r\n\r\n  return (\r\n    <>\r\n    <Typography variant=\"h6\" gutterbottom >Shipping Address</Typography>\r\n    <FormProvider >\r\n      <form >\r\n          <Grid container spacing={3}>\r\n            <FieldInputs required name='firstname' label='First name' />\r\n            <FieldInputs required name='lastname' label='Last name' />\r\n            <FieldInputs required name='address' label='Addess' />\r\n            <FieldInputs required name='email' label='Email' />\r\n            <FieldInputs required name='city' label='City' />\r\n            <FieldInputs required name='zip' label='Zip / Postal Code' />\r\n            <Grid xs={12} sm={6}>\r\n              <InputLabel>Shipping Country</InputLabel>\r\n              <Select value={Shippingcountry} fullWidth onChange={(e)=>{setShippingcountry(e.target.value)}}>\r\n                {countries.map((country)=>(\r\n                      <MenuItem key={country.id} value={country.id}>{country.label}</MenuItem>\r\n                ))}\r\n                \r\n              </Select>\r\n            </Grid>\r\n            <Grid xs={12} sm={6}>\r\n              <InputLabel>Shipping City</InputLabel>\r\n              <Select value={\"\"} fullWidth onChange={\"\"}>\r\n                <MenuItem key={\"\"} value={\"\"}>Select me</MenuItem>\r\n              </Select>\r\n            </Grid>\r\n            <Grid xs={12} sm={6}>\r\n              <InputLabel>Shipping Options</InputLabel>\r\n              <Select value={\"\"} fullWidth onChange={\"\"}>\r\n                <MenuItem key={\"\"} value={\"\"}>Select me</MenuItem>\r\n              </Select>\r\n            </Grid>\r\n          </Grid>\r\n      </form>\r\n\r\n    </FormProvider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddressFrom"],"mappings":"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"},"metadata":{},"sourceType":"module"}